---
- name: Create "{{ docker_user }}" Docker bin dir
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.file:
    path: "{{ docker_user_info.home }}/bin"
    state: directory
    mode: "0700"
  tags:
    - docker

- name: Create "{{ docker_user }}" systemd config dir
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.file:
    path: "{{ docker_user_info.home }}/.config/systemd/user"
    state: directory
    mode: "0700"
  tags:
    - docker

- name: Download docker-{{ docker_release }}.tgz
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.get_url:
    url: "{{ docker_url }}/docker-{{ docker_release }}.tgz"
    dest: "{{ docker_user_info.home }}/docker-{{ docker_release }}.tgz"
    checksum: "sha256:{{ docker_release_shasum }}"
    owner: "{{ docker_user }}"
    mode: "0644"
  tags:
    - docker

- name: Download docker-rootless-extras-{{ docker_release }}.tgz
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.get_url:
    url: "{{ docker_url }}/docker-rootless-extras-{{ docker_release }}.tgz"
    dest: "{{ docker_user_info.home }}/docker-rootless-extras-{{ docker_release }}.tgz"
    checksum: "sha256:{{ docker_release_rootless_shasum }}"
    owner: "{{ docker_user }}"
    mode: "0644"
  tags:
    - docker

- name: Extract docker-{{ docker_release }}.tgz into {{ docker_user_info.home }}/bin
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.unarchive:
    src: "{{ docker_user_info.home }}/docker-{{ docker_release }}.tgz"
    dest: "{{ docker_user_info.home }}/bin"
    extra_opts:
      - --strip-components=1
    remote_src: true
  notify:
    - Restart rootless docker
  tags:
    - docker

- name: Extract docker-rootless-extras-{{ docker_release }}.tgz into {{ docker_user_info.home }}/bin
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.unarchive:
    src: "{{ docker_user_info.home }}/docker-rootless-extras-{{ docker_release }}.tgz"
    dest: "{{ docker_user_info.home }}/bin"
    extra_opts:
      - --strip-components=1
    remote_src: true
  tags:
    - docker

- name: Add Docker systemd service
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.template:
    src: docker_rootless.service.j2
    dest: "{{ docker_user_info.home }}/.config/systemd/user/docker.service"
    backup: true
    mode: 0600
  tags:
    - docker
    - systemd

- name: Enable and start Docker (rootless installation)
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.systemd:
    name: docker.service
    enabled: true
    state: started
    scope: user
    daemon_reload: true
  tags:
    - docker
    - systemd
...
